select
    substr('        ' || coalesce(cast(round(summary_data.january_min, 1) as text), '0.0'), -6) as january_min,
    substr('        ' || coalesce(cast(round(summary_data.january_max, 1) as text), '0.0'), -6) as january_max,
    substr('        ' || coalesce(cast(round(summary_data.january_avg, 1) as text), '0.0'), -6) as january_avg,
    substr('        ' || coalesce(cast(round(summary_data.february_min, 1) as text), '0.0'), -6) as february_min,
    substr('        ' || coalesce(cast(round(summary_data.february_max, 1) as text), '0.0'), -6) as february_max,
    substr('        ' || coalesce(cast(round(summary_data.february_avg, 1) as text), '0.0'), -6) as february_avg,
    substr('        ' || coalesce(cast(round(summary_data.march_min, 1) as text), '0.0'), -6) as march_min,
    substr('        ' || coalesce(cast(round(summary_data.march_max, 1) as text), '0.0'), -6) as march_max,
    substr('        ' || coalesce(cast(round(summary_data.march_avg, 1) as text), '0.0'), -6) as march_avg,
    substr('        ' || coalesce(cast(round(summary_data.april_min, 1) as text), '0.0'), -6) as april_min,
    substr('        ' || coalesce(cast(round(summary_data.april_max, 1) as text), '0.0'), -6) as april_max,
    substr('        ' || coalesce(cast(round(summary_data.april_avg, 1) as text), '0.0'), -6) as april_avg,
    substr('        ' || coalesce(cast(round(summary_data.may_min, 1) as text), '0.0'), -6) as may_min,
    substr('        ' || coalesce(cast(round(summary_data.may_max, 1) as text), '0.0'), -6) as may_max,
    substr('        ' || coalesce(cast(round(summary_data.may_avg, 1) as text), '0.0'), -6) as may_avg,
    substr('        ' || coalesce(cast(round(summary_data.june_min, 1) as text), '0.0'), -6) as june_min,
    substr('        ' || coalesce(cast(round(summary_data.june_max, 1) as text), '0.0'), -6) as june_max,
    substr('        ' || coalesce(cast(round(summary_data.june_avg, 1) as text), '0.0'), -6) as june_avg,
    substr('        ' || coalesce(cast(round(summary_data.july_min, 1) as text), '0.0'), -6) as july_min,
    substr('        ' || coalesce(cast(round(summary_data.july_max, 1) as text), '0.0'), -6) as july_max,
    substr('        ' || coalesce(cast(round(summary_data.july_avg, 1) as text), '0.0'), -6) as july_avg,
    substr('        ' || coalesce(cast(round(summary_data.august_min, 1) as text), '0.0'), -6) as august_min,
    substr('        ' || coalesce(cast(round(summary_data.august_max, 1) as text), '0.0'), -6) as august_max,
    substr('        ' || coalesce(cast(round(summary_data.august_avg, 1) as text), '0.0'), -6) as august_avg,
    substr('        ' || coalesce(cast(round(summary_data.september_min, 1) as text), '0.0'), -6) as september_min,
    substr('        ' || coalesce(cast(round(summary_data.september_max, 1) as text), '0.0'), -6) as september_max,
    substr('        ' || coalesce(cast(round(summary_data.september_avg, 1) as text), '0.0'), -6) as september_avg,
    substr('        ' || coalesce(cast(round(summary_data.october_min, 1) as text), '0.0'), -6) as october_min,
    substr('        ' || coalesce(cast(round(summary_data.october_max, 1) as text), '0.0'), -6) as october_max,
    substr('        ' || coalesce(cast(round(summary_data.october_avg, 1) as text), '0.0'), -6) as october_avg,
    substr('        ' || coalesce(cast(round(summary_data.november_min, 1) as text), '0.0'), -6) as november_min,
    substr('        ' || coalesce(cast(round(summary_data.november_max, 1) as text), '0.0'), -6) as november_max,
    substr('        ' || coalesce(cast(round(summary_data.november_avg, 1) as text), '0.0'), -6) as november_avg,
    substr('        ' || coalesce(cast(round(summary_data.december_min, 1) as text), '0.0'), -6) as december_min,
    substr('        ' || coalesce(cast(round(summary_data.december_max, 1) as text), '0.0'), -6) as december_max,
    substr('        ' || coalesce(cast(round(summary_data.december_avg, 1) as text), '0.0'), -6) as december_avg,
    substr('        ' || coalesce(cast(round(summary_data.total_min, 1) as text), '0.0'), -7) as total_min,
    substr('        ' || coalesce(cast(round(summary_data.total_max, 1) as text), '0.0'), -7) as total_max,
    substr('        ' || coalesce(cast(round(summary_data.total_avg, 1) as text), '0.0'), -7) as total_avg
from (
  select
    min(yearly_data.january) as january_min,
    max(yearly_data.january) as january_max,
    avg(yearly_data.january) as january_avg,
    min(yearly_data.february) as february_min,
    max(yearly_data.february) as february_max,
    avg(yearly_data.february) as february_avg,
    min(yearly_data.march) as march_min,
    max(yearly_data.march) as march_max,
    avg(yearly_data.march) as march_avg,
    min(yearly_data.april) as april_min,
    max(yearly_data.april) as april_max,
    avg(yearly_data.april) as april_avg,
    min(yearly_data.may) as may_min,
    max(yearly_data.may) as may_max,
    avg(yearly_data.may) as may_avg,
    min(yearly_data.june) as june_min,
    max(yearly_data.june) as june_max,
    avg(yearly_data.june) as june_avg,
    min(yearly_data.july) as july_min,
    max(yearly_data.july) as july_max,
    avg(yearly_data.july) as july_avg,
    min(yearly_data.august) as august_min,
    max(yearly_data.august) as august_max,
    avg(yearly_data.august) as august_avg,
    min(yearly_data.september) as september_min,
    max(yearly_data.september) as september_max,
    avg(yearly_data.september) as september_avg,
    min(yearly_data.october) as october_min,
    max(yearly_data.october) as october_max,
    avg(yearly_data.october) as october_avg,
    min(yearly_data.november) as november_min,
    max(yearly_data.november) as november_max,
    avg(yearly_data.november) as november_avg,
    min(yearly_data.december) as december_min,
    max(yearly_data.december) as december_max,
    avg(yearly_data.december) as december_avg,
    min(yearly_data.total) as total_min,
    max(yearly_data.total) as total_max,
    avg(yearly_data.total) as total_avg
  from (
    select --pivoted.year,
      max(pivoted.january) as january,
      max(pivoted.february) as february,
      max(pivoted.march) as march,
      max(pivoted.april) as april,
      max(pivoted.may) as may,
      max(pivoted.june) as june,
      max(pivoted.july) as july,
      max(pivoted.august) as august,
      max(pivoted.september) as september,
      max(pivoted.october) as october,
      max(pivoted.november) as november,
      max(pivoted.december) as december,
      sum(pivoted.rainfall) as total
    from (
      select rain_data.year as year,
        case when rain_data.month = 1 then rain_data.rainfall else null end as january,
        case when rain_data.month = 2 then rain_data.rainfall else null end as february,
        case when rain_data.month = 3 then rain_data.rainfall else null end as march,
        case when rain_data.month = 4 then rain_data.rainfall else null end as april,
        case when rain_data.month = 5 then rain_data.rainfall else null end as may,
        case when rain_data.month = 6 then rain_data.rainfall else null end as june,
        case when rain_data.month = 7 then rain_data.rainfall else null end as july,
        case when rain_data.month = 8 then rain_data.rainfall else null end as august,
        case when rain_data.month = 9 then rain_data.rainfall else null end as september,
        case when rain_data.month = 10 then rain_data.rainfall else null end as october,
        case when rain_data.month = 11 then rain_data.rainfall else null end as november,
        case when rain_data.month = 12 then rain_data.rainfall else null end as december,
        rain_data.rainfall as rainfall
      from (
        select cast(strftime('%Y', s.time_stamp, 'unixepoch') as integer) as year,
          cast(strftime('%m', s.time_stamp, 'unixepoch') as integer) as month,
          sum(s.rainfall) as rainfall
        from sample s
        inner join station stn on stn.station_id = s.station_id
        where stn.code = :stationCode
        and cast(strftime('%Y', s.time_stamp, 'unixepoch') as integer) between cast(strftime('%Y', :start_t, 'unixepoch') as integer) and cast(strftime('%Y', :end_t, 'unixepoch') as integer)
        group by year, month
      ) as rain_data
    ) as pivoted
    group by pivoted.year
  ) as yearly_data
) as summary_data