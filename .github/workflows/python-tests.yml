name: Python tests

on: [push]

jobs:
  davis-logger-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7,3.6]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: |
          cd davis-logger
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          cd davis-logger
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd davis-logger
          pytest test/dmp_tests.py test/dst_tests.py test/loop_tests.py test/util.py test/procedure_tests.py
  server-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: |
          cd server
          python -m pip install --upgrade pip
          pip install flake8 pytest
          # Sever tsts currently just cover the command processor. Requirements are
          # currently failing to install on ubuntu-latest (old pyopenssl) so we'll
          # just skip them
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          cd server
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd server/test
          pytest
  weather-push-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: |
          cd weather_push
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          cd weather_push
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd weather_push
          pytest test/codec_tests.py test/statistics_collector_tests.py test/tcp_packet_tests.py test/udp_packet_tests.py test/weather_record_tests.py

