# coding=utf-8
"""
Tests the functions that deal with the loop packet type.
"""
import unittest
from davis_logger.record_types.loop import serialise_loop, deserialise_loop, deserialise_loop2, serialise_loop2, \
    PACKET_TYPE_LOOP, get_packet_type, PACKET_TYPE_LOOP2

__author__ = 'david'


def toHexString(string):
    """
    Converts the supplied string to hex.
    :param string: Input string
    :return:
    """
    result = ""
    for char in string:

        hex_encoded = hex(ord(char))[2:]
        if len(hex_encoded) == 1:
            hex_encoded = '0' + hex_encoded

        result += r'\x{0}'.format(hex_encoded)
    return result


class loop_tests(unittest.TestCase):

    loop_packets = [
        # These packets are with the console only having been logging for a
        # few hours so many values are 'dashed' (such as storm start time)
        b'\x4c\x4f\x4f\xec\x00\x27\x00\x87\x75\x0a\x03\x32\xca\x02\x00\x01\xcd'
        b'\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x34'
        b'\xff\xff\xff\xff\xff\xff\xff\x00\x00\xff\xff\x7f\x00\x00\xff\xff\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff'
        b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x40\x03\x00\xc1\x83\x02\xe8\x07\x0a\x0d\x0f\x6b',
        b'\x4c\x4f\x4f\xec\x00\x27\x00\x87\x75\x0a\x03\x32\xca\x02\x00\x01\xcd'
        b'\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x34'
        b'\xff\xff\xff\xff\xff\xff\xff\x00\x00\xff\xff\x7f\x00\x00\xff\xff\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff'
        b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x40\x03\x00\xc1\x83\x02\xe8\x07\x0a\x0d\x0f\x6b',
        b'\x4c\x4f\x4f\xec\x00\x27\x00\x87\x75\x0a\x03\x32\xca\x02\x00\x01\xcd'
        b'\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x34'
        b'\xff\xff\xff\xff\xff\xff\xff\x00\x00\xff\xff\x7f\x00\x00\xff\xff\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff'
        b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x40\x03\x00\xc1\x83\x02\xe8\x07\x0a\x0d\x0f\x6b',
        b'\x4c\x4f\x4f\xec\x00\x27\x00\x87\x75\x0a\x03\x32\xca\x02\x00\x01\xcd'
        b'\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x34'
        b'\xff\xff\xff\xff\xff\xff\xff\x00\x00\xff\xff\x7f\x00\x00\xff\xff\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff'
        b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x40\x03\x00\xc1\x83\x02\xe8\x07\x0a\x0d\x0f\x6b',
        b'\x4c\x4f\x4f\xec\x00\x27\x00\x87\x75\x0a\x03\x32\xca\x02\x00\x01\xcd'
        b'\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x34'
        b'\xff\xff\xff\xff\xff\xff\xff\x00\x00\xff\xff\x7f\x00\x00\xff\xff\x00'
        b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff'
        b'\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
        b'\x00\x00\x40\x03\x00\xc1\x83\x02\xe8\x07\x0a\x0d\x0f\x6b',
    ]

    # A pile of sequential loop2 packets. They'll all be pretty similar.
    loop2_packets = [
        b"LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x01\xffL\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f.\x00\xffB"
        b"\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00"
        b"\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f"
        b"\xff\x7f\n\r|\'",
        b"LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x01\xffL\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f.\x00\xffB"
        b"\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00"
        b"\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f"
        b"\xff\x7f\n\r|\'",
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x02\xffL\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r\x97\x1b',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x02\xffV\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\rO\xd3',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x02\xffV\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\rO\xd3',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x02\xff^\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r\xef\x87',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x02\xff^\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r\xef\x87',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x03\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r=4',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x03\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r=4',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x03\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r=4',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x03\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r=4',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x03\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r\xac;',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x01\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\ra\xe0',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020@\x02\x01\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\ra\xe0',
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020?\x02\x03\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r\xf5\xfc',
        b"LOO\xec\x01\xff\x7f\x86v\xcf\x020?\x02\x01\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC"
        b"\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00"
        b"\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f"
        b"\xff\x7f\n\r8\'",
        b"LOO\xec\x01\xff\x7f\x86v\xcf\x020?\x02\x01\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC"
        b"\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00"
        b"\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f"
        b"\xff\x7f\n\r8\'",
        b'LOO\xec\x01\xff\x7f\x86v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf5u\xf5u\x84v\xff\x06\x17\x01\x14\x12\n\x03.\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff\x7f'
        b'\xff\x7f\n\r\xd6\xda',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r~\x0b',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x01\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r\x90\xf6',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x15\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r~\x0b',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r\xef\x04',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r\xef\x04',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x14\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r\xef\x04',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x13\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r(J',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x13\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r(J',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x13\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r(J',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x13\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r(J',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x01\xffW\x01\x11\x00\x13\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r\xc6\xb7',
        b'LOO\xec\x01\xff\x7f\x88v\xcf\x020?\x02\x00\xffW\x01\x11\x00\x13\x00\x07\x008\x01\xff\x7f\xff\x7f/\x00\xffC'
        b'\xff9\x00:\x007\x00\x00\x00\x00\x1a\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x003\x00\x00\x00\x02\x00\x00'
        b'\xed\xff\xf7u\xf7u\x86v\xff\x07\x17\x01\x14\x12\x0b\x03/\x03\x02\x02\xff\x7f\xff\x7f\xff\x7f\xff\x7f\xff'
        b'\x7f\xff\x7f\n\r(J',
    ]

    def test_loop_round_trip(self):
        for packet in self.loop_packets:
            decoded = deserialise_loop(packet[0:97])
            encoded = serialise_loop(decoded)
            decoded2 = deserialise_loop(encoded[0:97])

            self.assertDictEqual(decoded._asdict(), decoded2._asdict())
            self.assertEqual(packet, encoded)

    def test_revision_a_packet_has_no_bar_trend(self):
        packet = self.loop_packets[0]

        rev_a_packet = bytearray()
        rev_a_packet.extend(b'LOOP')
        rev_a_packet.extend(packet[4:])

        decoded = deserialise_loop(rev_a_packet[0:97])

        self.assertIsNone(decoded.barTrend)

    def test_loop2_round_trip(self):
        for packet in self.loop2_packets:
            decoded = deserialise_loop2(packet[0:97])
            encoded = serialise_loop2(decoded)
            decoded2 = deserialise_loop2(encoded[0:97])

            self.maxDiff = None
            self.assertDictEqual(decoded._asdict(), decoded2._asdict())
            self.assertEqual(bytes(packet), bytes(encoded))

    def test_detect_loop(self):
        self.assertEqual(PACKET_TYPE_LOOP, get_packet_type(self.loop_packets[0]))

    def test_detect_loop2(self):
        self.assertEqual(PACKET_TYPE_LOOP2, get_packet_type(self.loop2_packets[0]))